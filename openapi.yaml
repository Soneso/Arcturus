openapi: 3.0.1
info:
  title: Arcturus Stellar Plugin
  description: A plugin that allows the user to request information about accounts from the Stellar Network (Blockchain) using ChatGPT. An account is identified by it's account id. If you do not know the account id ask the user for it.
  version: 'v1'
servers:
  - url: http://localhost:5003
paths:
  /account/details/{account_id}:
    get:
      operationId: getAccountDetails
      summary: Get the current details for the given account. 
      parameters:
      - in: path
        name: account_id
        schema:
            type: string
        required: true
        description: Id of the account to get the details for.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDetails'
        "404":
          description: Account was not found on the Stellar Network.
  /assets/for_issuer/{issuer_account_id}:
    get:
      operationId: getAssetsForIssuer
      summary: Get information about all assets issued by this issuer account. 
      parameters:
      - in: path
        name: issuer_account_id
        schema:
            type: string
        required: true
        description: Id of the account to get the information for.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsResponse'
        "404":
          description: Account was not found on the Stellar Network.
  /claimable_balances/for_claimant/{claimant_account_id}:
    get:
      operationId: getClaimableBalancesForClaimant
      summary: Get information about all claimable balances having the given account as a claimant. 
      parameters:
      - in: path
        name: claimant_account_id
        schema:
            type: string
        required: true
        description: Id of the account to get the information for.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimableBalancesResponse'
        "404":
          description: Account was not found on the Stellar Network.
  /claimable_balances/for_sponsor/{sponsor_account_id}:
    get:
      operationId: getClaimableBalancesForSponsor
      summary: Get information about all claimable balances having the given account as a sponsor. 
      parameters:
      - in: path
        name: sponsor_account_id
        schema:
            type: string
        required: true
        description: Id of the account to get the information for.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimableBalancesResponse'
        "404":
          description: Account was not found on the Stellar Network.
  /claimable_balances/claimable_balance/{claimable_balance_id}:
    get:
      operationId: getClaimableBalancesForId
      summary: Get information about a claimable balance identified by the claimable balance id. 
      parameters:
      - in: path
        name: claimable_balance_id
        schema:
            type: string
        required: true
        description: Id of the claimable balance to get the information for.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimableBalance'
        "404":
          description: Claimable balance was not found on the Stellar Network.
  /stellar_toml/{domain}:
    get:
      operationId: getStellarToml
      summary: Stellar Info Data for a given domain. A stellar.toml file is used to expose info about the organization's Stellar integration. By setting the home_domain of a Stellar account to the domain that hosts the stellar.toml, organizations create a link between this info and an account.  
      parameters:
      - in: path
        name: domain
        schema:
            type: string
        required: true
        description: Given the domain DOMAIN, the stellar.toml will be searched for at the following location https://DOMAIN/.well-known/stellar.toml . Please provide only the DOMAIN to this endpoint, not the complete url even if the complete url is stored in the home_domain of the account.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StellarToml'
        "404":
          description: No stellar.toml file was not found for the given domain.
components:
  schemas:
    AccountDetails:
      type: object
      properties:
        id:
          type: string
          description: A unique identifier for this account.
        account_id:
          title: Account Id or Public Key
          type: string
          description: This account's public key encoded in a base32 string representation (same as id). The public key was used to create this account.
        sequence:
          title: Sequence Number
          type: integer
          description: This account's current sequence number. Used to identify and verify the order of transactions with this account as a source account.
        sequence_ledger:
          title: Sequence Ledger
          type: integer
          description: The unsigned 32-bit ledger number of the sequence number's age.
        sequence_time:
          title: Sequence Time
          type: integer
          description: The unsigned 64-bit UNIX timestamp of the sequence number's age.
        subentry_count:
          title: Subentry Count
          type: integer
          description: The number of subentries on this account. Subentries can be Trustlines, Offers, Additional signers or Data entries.
        home_domain:
          title: Home Domain
          type: string
          description: Optional. A fully qualified domain name (FQDN) linked to this Stellar account, used to generate an on-chain link to a Stellar Info File (stellar.toml), which holds off-chain metadata. You can load the metadata by using the stellar_toml endpoint.  
        last_modified_ledger:
          title: Last Modified Ledger
          type: number
          description: The ID of the last ledger that included changes to this account.
        last_modified_time:
          title: Last Modified Time
          type: string
          description: The time this account was modified the last time.
        num_sponsoring:
          title: Sponsoring reserves
          type: number
          description: The number of reserves sponsored by this account.
        num_sponsored:
          title: Sponsored reserves
          type: number
          description: The number of reserves sponsored for this account.
        sponsor:
          title: Sponsor
          type: string
          description: The account ID of the sponsor who is paying the reserves for this account. Optional.
        thresholds:
          $ref: "#/components/schemas/AccountThresholds"
        flags:
          $ref: "#/components/schemas/AccountFlags"
        balances:
          $ref: "#/components/schemas/AccountBalances"
        signers:
          $ref: "#/components/schemas/AccountSigners"
        data:
          title: Account Data
          type: object
          description: An array of account data fields. Contains key/value pairs. The values are base64 encoded. Try to decode the value before showing it to the user. If the decoded value is human readable show the decoded value otherwise show the encoded value.
    AccountThresholds:
      type: object
      description: Transactions include Operations. Operations have varying levels of access. This object specifies thresholds for different access levels, as well as the weight of the master key.
      properties:
        low_threshold:
          type: integer
          description: The weight required for a valid transaction including the Allow Trust and Bump Sequence operations.
        med_threshold:
          type: integer
          description: The weight required for a valid transaction including the Create Account, Payment, Path Payment, Manage Buy Offer, Manage Sell Offer, Create Passive Sell Offer, Change Trust, Inflation, and Manage Data operations.
        high_threshold:
          type: integer
          description: The weight required for a valid transaction including the Account Merge and Set Options operations.
    AccountFlags:
      type: object
      description: This account can be an asset issuer. If this account is an asset issuer, the flags denote the enabling/disabling of certain asset issuer privileges. To check if this account is an issuer account you can query the assets for it.
      properties:
        auth_immutable:
          type: boolean
          description: If set to true, none of the other flags can be changed.
        auth_required:
          type: boolean
          description: If set to true, anyone who wants to hold an asset issued by this account must first be approved by this account.
        auth_revocable:
          type: boolean
          description: If set to true, this account can freeze the balance of a holder of an asset issued by this account.
        auth_clawback_enabled:
          type: boolean
          description: If set to true, trustlines created for assets issued by this account have clawbacks enabled.
    AccountBalances:
      type: array
      description: The balances of the assets this account holds. Contains one entry for each asset this account holds. Each asset has its own balance and these balances are stored in trustlines for every asset except XLM, which is held directly by the account.
      title: Balances
      items:
        balance:
          title: Balance
          type: number
          format: float
          description: The number of units of this asset held by this account.
        buying_liabilities:
          title: Buying Liabilities
          type: number
          format: float
          description: The sum of all buy offers owned by this account for this asset. Optional.
        selling_liabilities:
          title: Selling Liabilities
          type: number
          format: float
          description: The sum of all sell offers owned by this account for this asset. Optional.
        limit:
          title: Limit
          type: number
          format: float
          description: The maximum amount of this asset that this account is willing to accept. Specified when opening a trustline. Optional. 
        asset_type:
          title: Asset Type
          type: string
          description: Either native, credit_alphanum4, credit_alphanum12, or liquidity_pool_shares.
        asset_code:
          title: Asset Code
          type: string
          description: An asset's identifying code. Optional. Only available if asset type is not native.
        asset_issuer:
          title: Asset Issuer
          type: string
          description: The account id of this asset's issuer. Optional. Only available if not native.
        sponsor:
          title: Trustline Sponsor
          type: string
          description: The account id of the sponsor who is paying the reserves for this trustline. Optional.
    AccountSigners:
      type: array
      description: The public keys and associated weights that can be used to authorize transactions for this account. Used for multi-sig.
      title: Signers
      items:
        weight:
          title: Weight
          type: integer
          description: The numerical weight of a signer. Used to determine if a transaction meets the threshold requirements.
        sponsor:
          title: Signer Sponsor
          type: string
          description: The account ID of the sponsor who is paying the reserves for this signer. Optional.
        key:
          title: Signer Key
          type: string
          description: A hash of characters dependent on the signer type.
        type:
          title: Signer Type
          type: string
          description: The type of hash for this signer. Can be ed25519_public_key representing a normal Stellar public key (account ID) or sha256_hash representing the SHA256 hash of some arbitrary x. Adding a signature of the type sha256_hash allows anyone who knows x to sign a transaction from this account. Note, Once this transaction is broadcast, x will be known publicly. Or it can be preauth_tx representing the hash of a pre-authorized transaction. This signer is automatically removed from the account when a matching transaction is properly applied. 
    AssetsResponse:
      type: array
      description: A list of assets. Accounts on the Stellar network can be used to track, hold, and transfer any type of asset. Assets can represent many things, cryptocurrencies (such as bitcoin or ether), fiat currencies (such as dollars or pesos), other tokens of value (such as NFTs), pool shares, or even bonds and equity.
      title: Assets
      items:
        asset_type:
          title: Asset Type
          type: string
          description: This asset's type. Either credit_alphanum4 or credit_alphanum12.
        asset_code:
          title: Asset Code
          type: string
          description: This asset's code. Assets on Stellar have two identifying characteristics, the asset code and the issuer. Since more than one organization can issue a credit representing the same asset, asset codes often overlap (for example, multiple companies offer a USD token on Stellar). Assets are uniquely identified by the combination of their asset code and issuer.
        asset_issuer:
          title: Asset Issuer
          type: string
          description: The Stellar account id of this asset's issuer.
        accounts:
          $ref: "#/components/schemas/AssetAccounts"
        num_claimable_balances:
          title: Nr. of claimable balances
          type: integer
          description: The current number of claimable balances for this asset.
        num_liquidity_pools:
          title: Nr. of liquidity pools
          type: integer
          description: The current number of liquidity pools for this asset.
        balances:
          $ref: "#/components/schemas/AssetBalances"
        claimable_balances_amount:
          title: Claimable balances amount
          type: number
          format: float
          description: The number of units in claimable balances for this asset.
        liquidity_pools_amount:
          title: Liquidity pools amount
          type: number
          format: float
          description: The number of units in liquidity pools for this asset.
        amount:
          title: Amount
          type: number
          format: float
          description: The number of authorized units issued for this asset.
        num_accounts:
          title: Nr. of accounts
          type: integer
          description: The number of accounts that have issued a trustline to this asset. If the auth_required flag for this asset's issuer is set to true, this number only includes the accounts who have both set up a trustline to the asset and have been authorized to hold the asset. 
        flags:
          $ref: "#/components/schemas/AssetFlags"
        _links:
          $ref: "#/components/schemas/AssetExternalLinks"
    AssetAccounts:
      type: object
      description: Information about the number of Stellar accounts holding this asset.
      properties:
        authorized:
          type: integer
          description: Number of accounts that have a trustline to this asset and are authorized to hold this asset.
        authorized_to_maintain_liabilities:
          type: integer
          description: Number of accounts that are authorized to maintain liabilities for this asset.
        unauthorized:
          type: integer
          description: Number of accounts that have a trustline to this asset but are not authorized to hold this asset.
    AssetBalances:
      type: object
      description: Information about balances of this asset hold by other accounts.
      properties:
        authorized:
          type: number
          format: float
          description: Number of units of this asset authorized to be hold by other accounts that have a trustline to this asset.
        authorized_to_maintain_liabilities:
          type: number
          format: float
          description: Number of units of this asset authorized to maintain liabilities hold by other accounts.
        unauthorized:
          type: number
          format: float
          description: Number of units of this asset unauthorized to be hold by other accounts that have a trustline to this asset.
    AssetFlags:
      type: object
      description: Flags denoting the enabling/disabling of certain asset issuer privileges.
      properties:
        auth_required:
          type: boolean
          description: If set to true, anyone who wants to hold this asset must first be authorized by it's issuer account.
        auth_revocable:
          type: boolean
          description: If set to true, the issuer account of this asset can freeze the asset's balance of a holder.
        auth_clawback_enabled:
          type: boolean
          description: If set to true, trustlines created for this asset have clawbacks enabled.
        auth_immutable:
          type: boolean
          description: If set to true, none of the other flags of this asset can be changed.
    AssetsExternalLinks:
      type: array
      description: A list of links to external information about this asset. Currently only contains a link to a Stellar Info File (toml), which holds off-chain metadata about the asset and it's issuer.
      title: Asset Links
      items:
        toml:
          title: Toml
          type: object
          description: A link to the Stellar Info File holding off-chain metadata about the asset and the issuer of this asset.
          properties:
            href:
            type: string
            description: Contains the link target (url) to the stellar info file holding off-chain metadata about the asset and it's issuer.
    ClaimableBalancesResponse:
      type: array
      description: A list of claimable balances.
      title: Claimable Balances
      items:
        $ref: "#/components/schemas/ClaimableBalance"
    ClaimableBalance:
      type: object
      description: A claimable balance represents the transfer of ownership of some amount of an asset. Claimable balances provide a mechanism for setting up a payment which can be claimed in the future. This allows an account to make payments to other accounts which are currently not able to accept them.
      title: Claimable Balance
      properties:
        id:
          title: ID
          type: string
          description: A unique identifier for this claimable balance.
        asset:
          title: Asset
          type: string
          description: The asset available to be claimed. It can be native (for XML) of if not native, than formatted like this "asset_code:asset_issuer_id".
        amount:
          title: Amount
          type: number
          format: float
          description: The amount of asset that can be claimed.
        sponsor:
          title: Sponsor
          type: string
          description: The account id of the sponsor who is paying the reserves for this claimable balance. Optional.
        last_modified_ledger:
          title: Last Modified Ledger
          type: integer
          description: The ID of the last ledger that included changes to this claimable balance.
        last_modified_time:
          title: Last Modified Time
          type: string
          description: The time this claimable balance was modified the last time.
        claimants:
          type: array
          description: The list of entries which could claim the claimable balance.
          title: Claimants
          items:
            destination:
              title: ID
              type: string
              description: The account ID who can claim the balance.
            predicate:
              $ref: "#/components/schemas/ClaimantPredicate"
    ClaimantPredicate:
      type: object
      description: The condition which must be satisfied so that the destination account (claimant) of a claimable balance can claim the balance.
      properties:
        unconditional:
          type: boolean
          description: If true it means this clause of the condition is always satisfied. Optional.
        and:
          type: array
          description: The array will always contain two elements which also are predicates. This clause of the condition is satisfied if both of the two elements in the array are satisfied. Optional.
          items:
            $ref: "#/components/schemas/ClaimantPredicate"
        or:
          type: array
          description: The array will always contain two elements which also are predicates. This clause of the condition is satisfied if at least one of the two elements in the array are satisfied. Optional.
          items:
            $ref: "#/components/schemas/ClaimantPredicate"
        not:
          $ref: "#/components/schemas/ClaimantPredicate"
          description: The value is also a predicate. This clause of the condition is satisfied if the value is not satisfied. Optional.          
        absBefore:
          type: string
          description: Optional. A customized ISO 8601 formatted string representing a deadline for when the claimable balance can be claimed. If the balance is claimed before the date then this clause of the condition is satisfied. The format of this date string is a custom extension on top of ISO 8601 format. It allows for years to be outside the 0000-9999 range. The dates are derived from a unix epoch value in range of signed 64 bit integer. This means the date expresses a much larger calendar range of 292277026596 years into future and -292471206707 years back in past. This custom extension format will add a '+' prefix on values that go beyond year 9999 into the future and for years that are prior to year 0(B.C per Gregorian calendar) it will add prefix of '-'. Here are examples of date string values that are possible '2022-02-10T15:30:22Z', '+39121901036-03-29T15:30:22Z', '-7025-12-23T00:00:00Z'
        absBeforeEpoch:
          type: string
          description: Optional. A unix epoch value in seconds representing the same deadline date for when the claimable balance can be claimed. It is the same date/time value that absBefore represents, just expressed in integral unix epoch seconds within the range of a signed 64bit integer.
        relBefore:
          type: string
          description: Optional. A relative deadline for when the claimable balance can be claimed. The value represents the number of seconds since the close time of the ledger which created the claimable balance.
    StellarToml:
      type: object
      description: Off-chain Public Stellar Info Data related to accounts and assets and about the organization controlling them.
      properties:
        VERSION:
          type: string
          title: Version Nr.
          description: The version of the stellar.toml format adheres to. This helps parsers know which fields to expect.
        NETWORK_PASSPHRASE:
          type: string
          title: Network Passphrase
          description: The passphrase for the specific Stellar network this infrastructure operates on.
        FEDERATION_SERVER:
          type: string
          title: Federation Server
          description: The endpoint for clients to resolve stellar addresses for users on the stellar.toml domain via Stellar SEP-0002 Federation Protocol.
        TRANSFER_SERVER:
          type: string
          title: Transfer Server
          description: The server used for Stellar SEP-0006 Anchor/Client interoperability.
        TRANSFER_SERVER_SEP0024:
          type: string
          title: Transfer Server SEP-0024
          description: The server used for the Stellar SEP-0024 Anchor/Client interoperability.
        KYC_SERVER:
          type: string
          title: KYC Server
          description: The server used for the Stellar SEP-0012 Anchor/Client customer info transfer.
        WEB_AUTH_ENDPOINT:
          type: string
          title: WebAuth Endpoint
          description: The endpoint used for the Stellar SEP-0010 Web Authentication.
        SIGNING_KEY:
          type: string
          title: SEP-0010 Signing Key
          description: The signing key is used for the Stellar SEP-0010 Authentication Protocol.
        HORIZON_URL:
          type: string
          title: Horizon Url
          description: Location of public-facing Horizon instance (if one is offered).
        ACCOUNTS:
          type: array
          title: Accounts
          description: A list of Stellar accounts that are controlled by this organization.
          items:
            type: string
            description: The Id of an account controlled by this organization.
        URI_REQUEST_SIGNING_KEY:
          type: string
          title: SEP-0007 Uri Request Signing Key
          description: The signing key is used for SEP-0007 delegated signing.
        DIRECT_PAYMENT_SERVER:
          type: string
          title: Direct Payment Server
          description: The server used for receiving SEP-0031 direct fiat-to-fiat payments.
        ANCHOR_QUOTE_SERVER:
          type: string
          title: Anchor Quote Server
          description: The server used for receiving SEP-0038 requests.
        DOCUMENTATION:
          $ref: "#/components/schemas/StellarTomlOrganizationDocumentation"
        PRINCIPALS:
          type: array
          description: Points of Contact Documentation. It contains identifying information for the primary point of contact or principal(s) of the organization.
          items:
            $ref: "#/components/schemas/StellarTomlPrincipal"
        CURRENCIES:
          type: array
          description: List of all currencies supported by this organization. Each entry contains a set of fields representing metadata for the currency.
          items:
            $ref: "#/components/schemas/StellarTomlCurrency"
        VALIDATORS:
          type: array
          description: List of all Stellar Nodes the organization runs. This section allows the organization to declare its node(s), and to let others know the location of any public archives it maintain.
          items:
            $ref: "#/components/schemas/StellarTomlValidator"
    StellarTomlOrganizationDocumentation:
      type: object
      description: Public information about the organization providing this Stellar Info Data and controlling the listed accounts and assets.
      properties:
        ORG_NAME:
          type: string
          title: Name
          description: Legal name of the organization.
        ORG_DBA:
          type: string
          title: DBA
          description: DBA (Doing Business As) of the organization if any.
        ORG_URL:
          type: string
          title: URL
          description: The organization's official URL. It's stellar.toml must be hosted on the same domain.
        ORG_LOGO:
          type: string
          title: Logo
          description: A Link to a PNG image of the organization's logo.
        ORG_DESCRIPTION:
          type: string
          title: Description
          description: Short description of the organization.
        ORG_PHYSICAL_ADDRESS:
          type: string
          title: Physical Address
          description: Physical address for your organization.
        ORG_PHYSICAL_ADDRESS_ATTESTATION:
          type: string
          title: Physical Address Attestation
          description: URL on the same domain as the ORG_URL that contains an image or pdf official document attesting to the physical address of the organization. It must list the ORG_NAME or ORG_DBA as the party at the address. Only documents from an official third party are acceptable. E.g. a utility bill, mail from a financial institution, or business license.
        ORG_PHONE_NUMBER:
          type: string
          title: Phone Number
          description: The organization's phone number in E.164 format, e.g. +14155552671.
        ORG_PHONE_NUMBER_ATTESTATION:
          type: string
          title: Phone Number Attestation
          description: URL on the same domain as the ORG_URL that contains an image or pdf of a phone bill showing both the phone number and the organization's name.
        ORG_KEYBASE:
          type: string
          title: Keybase Account
          description: The Keybase account name of the organization. The Keybase account should contain proof of ownership of any public online accounts listed here, including the organization's domain.
        ORG_TWITTER:
          type: string
          title: Twitter Account
          description: The organization's Twitter account name.
        ORG_GITHUB:
          type: string
          title: GitHub Account
          description: The organization's Github account.
        ORG_OFFICIAL_EMAIL:
          type: string
          title: Email Address
          description: An email that business partners such as wallets, exchanges, or anchors can use to contact this organization. Must be hosted at the ORG_URL domain. If not, warn the user about that.
        ORG_SUPPORT_EMAIL:
          type: string
          title: Support Email Address
          description: An email that users can use to request support regarding Stellar assets or applications of this organization.
        ORG_LICENSING_AUTHORITY:
          type: string
          title: Licensing Authority
          description: Name of the authority or agency that issued a license, registration, or authorization to this organization, if applicable.
        ORG_LICENSE_TYPE:
          type: string
          title: License Type
          description: Type of financial or other license, registration, or authorization this organization holds, if applicable.
        ORG_LICENSE_NUMBER:
          type: string
          title: Licence Number
          description: Official license, registration, or authorization number of the organization, if applicable.
    StellarTomlPrincipal:
      type: object
      description: It contains public identifying information for a primary point of contact or principal of the organization.
      properties:
        name:
          type: string
          title: Name
          description: Full legal name of the principal.
        email:
          type: string
          title: Email
          description: Business email address of the principal.
        keybase:
          type: string
          title: Keybase Account
          description: Personal Keybase account. The Keybase account should include proof of ownership for other online accounts, as well as the organization's domain.
        telegram:
          type: string
          title: Telegram Account
          description: Personal Telegram account of the principal.
        twitter:
          type: string
          title: Twitter Account
          description: Personal Twitter account of the principal.
        github:
          type: string
          title: GitHub Account
          description: Personal Github account of the principal.
        id_photo_hash:
          type: string
          title: ID Photo Hash
          description: SHA-256 hash of a photo of the principal's government-issued photo ID.
        verification_photo_hash:
          type: string
          title: Verification Photo Hash
          description: SHA-256 hash of a verification photo of principal. The photo should be well-lit and contain principal holding ID card and signed, dated, hand-written message stating I, $NAME, am a principal of $ORG_NAME, a Stellar token issuer with address $ISSUER_ADDRESS.
    StellarTomlCurrency:
      type: object
      description: Holds public metadata about a currency supported by the organization.
      properties:
        code:
          type: string
          title: Token Code
          description: The token's code.
        code_template:
          type: string
          title: Token Code Template
          description: A pattern with ? as a single character wildcard. Allows a StellarTomlCurrency entry to apply to multiple assets that share the same info. An example is futures, where the only difference between issues is the date of the contract. E.g. CORN???????? to match codes such as CORN20180604.
        status:
          type: string
          title: Token Status
          description: Status of token. One of live, dead, test, or private. Allows issuer to mark whether token is dead/for testing/for private use or is live and should be listed in live exchanges.
        display_decimals:
          type: integer
          title: Token Decimals
          description: Preference for number of decimals to show when a client displays currency balance.
        name:
          type: string
          title: Token Name
          description: A short name for the token.
        desc:
          type: string
          title: Token Description
          description: Description of token and what it represents.
        conditions:
          type: string
          title: Token Conditions
          description: Conditions on token.
        image:
          type: string
          title: Token Image
          description: URL to a PNG image representing token.
        fixed_number:
          type: string
          title: Fixed Number of Tokens
          description: Fixed number of tokens, if the number of tokens issued will never change.
        max_number:
          type: string
          title: Max Number of Tokens
          description: Max number of tokens, if there will never be more than max_number tokens.
        is_unlimited:
          type: boolean
          title: Unlimited Tokens
          description: If true, the number of tokens is dilutable at the issuer's discretion.
        is_asset_anchored:
          type: boolean
          title: Is asset anchored
          description: true if token can be redeemed for underlying asset, otherwise false.
        anchor_asset_type:
          type: string
          title: Anchor Asset Type
          description: Type of asset anchored. Can be fiat, crypto, nft, stock, bond, commodity, realestate, or other.
        anchor_asset:
          type: string
          title: Anchor Asset
          description: If anchored token, code / symbol for asset that token is anchored to. E.g. USD, BTC, SBUX, Address of real-estate investment property.
        attestation_of_reserve:
          type: string
          title: Atestation of reserve
          description: URL to attestation or other proof, evidence, or verification of reserves, such as third-party audits.
        redemption_instructions:
          type: string
          title: Redemption instructions
          description: If anchored token, these are instructions to redeem the underlying asset from tokens.
        collateral_addresses:
          type: array
          title: Collateral Addresses
          description: If this is an anchored crypto token, lists of one or more public addresses that hold the assets for which the organization is issuing tokens.
          items:
            type: string
            description: Crypto address string.
        collateral_address_messages:
          type: array
          title: Collateral Address Messages
          description: Messages stating that funds in the collateral_addresses list are reserved to back the issued asset.
          items:
            type: string
            description: Message.
        collateral_address_signatures:
          type: array
          title: Collateral Address Signatures
          description: These prove that the organization controls the collateral_addresses. For each address it lists, it must sign the entry in collateral_address_messages with the address's private key and add the resulting string to this list as a base64-encoded raw signature.
          items:
            type: string
            description: base64-encoded raw signature.
        regulated:
          type: boolean
          title: Regulated
          description: Indicates whether or not this is a Stellar SEP-0008 regulated asset. If missing, false is assumed.
        approval_server:
          type: string
          title: Approval Server
          description: Url of a Stellar SEP-0008 compliant approval service that signs validated transactions.
        approval_criteria:
          type: string
          title: Approval Criteria
          description: A human readable string that explains the issuer's requirements for approving transactions.
    StellarTomlValidator:
      type: object
      description: Holds metadata about a Stellar validator Node the organization runs.
      properties:
        ALIAS:
          type: string
          title: Alias
          description: A name for display in Stellar Core configs.
        DISPLAY_NAME:
          type: string
          title: Display Name
          description: A human-readable name for display in quorum explorers and other interfaces.
        PUBLIC_KEY:
          type: string
          title: Public Key
          description: The Stellar account id associated with the node.
        HOST:
          type: string
          title: Host
          description: The IP:port or domain:port peers can use to connect to the node.
        HISTORY:
          type: string
          title: History
          description: The location of the history archive published by this validator.